package <%= rootPackage %>.models;

import org.apache.sling.api.resource.Resource;
import org.apache.sling.models.annotations.Model;
import org.apache.sling.models.annotations.injectorspecific.InjectionStrategy;
import org.apache.sling.models.annotations.injectorspecific.ValueMapValue;
<% if(lists.length > 0){ -%>
import javax.inject.Inject;
import java.util.List;
import java.util.Collections;
import org.apache.sling.models.annotations.injectorspecific.ChildResource;
import org.apache.commons.collections4.CollectionUtils;
<%} -%>

@Model(adaptables = Resource.class)
public class <%= className.charAt(0).toUpperCase() + className.slice(1) %> {
<% fields.forEach((field) =>{ %>
    @ValueMapValue(injectionStrategy=InjectionStrategy.OPTIONAL)
    protected <%= field.javaType %> <%= field.name %>;
<% }) %>
<% richTexts.forEach((richText) =>{ %>
    @ValueMapValue(injectionStrategy=InjectionStrategy.OPTIONAL)
    protected String <%= richText.name %>;
<% }) %>
<% lists.forEach((list) =>{ %>
    @ChildResource(name="<%= list.ulName %>", injectionStrategy = InjectionStrategy.OPTIONAL)
    @Inject
    protected List<<%= list.ulName.charAt(0).toUpperCase() + list.ulName.slice(1) %>> <%= list.ulName %>;
<% }) %>
<% selects.forEach((select) =>{ %>
    @ValueMapValue(injectionStrategy=InjectionStrategy.OPTIONAL)
    protected String <%= select.name %>;
<% }) %>
<% images.forEach((img) =>{ %>
    @ValueMapValue(injectionStrategy=InjectionStrategy.OPTIONAL)
    protected String <%= img.fileReference %>;
<% }) %>
<% videos.forEach((video) =>{ %>
    @ValueMapValue(injectionStrategy=InjectionStrategy.OPTIONAL)
    protected String <%= video.fileReference %>;

    <% if(video.poster){ -%>

    @ValueMapValue(injectionStrategy=InjectionStrategy.OPTIONAL)
    protected String <%= video.poster %>;
    <% } -%>
<% }) %>
<% links.forEach((link) =>{ %>
    @ValueMapValue(injectionStrategy=InjectionStrategy.OPTIONAL)
    protected String <%= link.name %>;

    @ValueMapValue(injectionStrategy=InjectionStrategy.OPTIONAL)
    protected Boolean <%= link.checkBox %>;
<% }) %>
<% fields.forEach((field) =>{ %>
    public <%= field.javaType %> get<%= field.name.charAt(0).toUpperCase() + field.name.slice(1) %>(){
        return <%= field.name %>;
    }
<% }) %>
<% lists.forEach((list) =>{ %>
    public List<<%= list.ulName.charAt(0).toUpperCase() + list.ulName.slice(1) %>> get<%= list.ulName.charAt(0).toUpperCase() + list.ulName.slice(1) %>() {
        if(CollectionUtils.isEmpty(<%= list.ulName %>)){
            return Collections.emptyList();
        }
        return <%= list.ulName %>;
    }
<% }) %>
<% selects.forEach((select) =>{ %>
    public String get<%= select.name.charAt(0).toUpperCase() + select.name.slice(1) %>(){
        return <%= select.name %>;
    }
<% }) %>
<% richTexts.forEach((richText) =>{ %>
    public String get<%= richText.name.charAt(0).toUpperCase() + richText.name.slice(1) %>(){
        return <%= richText.name %>;
    }
<% }) %>
<% images.forEach((img) =>{ %>
    public String get<%= img.fileReference.charAt(0).toUpperCase() + img.fileReference.slice(1) %>(){
        return <%= img.fileReference %>;
    }
<% }) %>
<% videos.forEach((video) =>{ %>
    public String get<%= video.fileReference.charAt(0).toUpperCase() + video.fileReference.slice(1) %>(){
        return <%= video.fileReference %>;
    }

    <% if(video.poster){ -%>

    public String get<%= video.poster.charAt(0).toUpperCase() + video.poster.slice(1) %>(){
        return <%= video.poster %>;
    }
    <% } -%>
<% }) %>
<% links.forEach((link) =>{ %>
    public String get<%= link.name.charAt(0).toUpperCase() + link.name.slice(1) %>(){
        return <%= link.name %>;
    }
    public boolean get<%= link.checkBox.charAt(0).toUpperCase() + link.checkBox.slice(1) %>(){
        return <%= link.checkBox %>;
    }
<% }) %>
}